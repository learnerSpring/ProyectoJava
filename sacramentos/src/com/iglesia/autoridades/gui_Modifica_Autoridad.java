// Cambio : Se puso Colores a las Etiquetas
// Fecha: 06/09/2022

package com.iglesia.autoridades;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class gui_Modifica_Autoridad extends javax.swing.JFrame {

    /**
     * Creates new form gui_Modifica_Autoridad
     */
    
    public gui_Modifica_Autoridad() {
        initComponents();
        jbtn_actualizar.setEnabled(false);
        llena_JTable();
        this.setLocationRelativeTo(null);
    }
    public void limpiar(){
      tf_id.setText("");
      tf_autoridad.setText("");
      tf_nombre.setText("");
    }
    public Connection obtiene_conexion(){
        Connection con= null;
        try {
            String url = "jdbc:MySQL://localhost:3306/sacramentos";         //db is the name of the database
            String user = "root";
            String password = "";
            Class.forName("com.mysql.cj.jdbc.Driver");
            //System.out.println("error tipo A ");
            con = (Connection) DriverManager.getConnection(url,user,password);
            
        }            
        catch(SQLException e) {
                System.out.println("error SQLException " + e.getMessage() );
                JOptionPane.showMessageDialog(null, "Error SqlExeption en Obtiene Conexion " + e.getMessage());
            }
        catch(Exception e){
                System.out.println("error Exception " + e.getMessage() );
                JOptionPane.showMessageDialog(null, "Error Exception en Obtiene Conexion" + e.getMessage() );
            } 
        return con;
        }
    public ArrayList<Autoridad> obtiene_lista(){
      
      ArrayList<Autoridad> lista = new ArrayList<Autoridad>();
      String sql = "select * from opciones_autoridades";
      Statement stm = null;
      ResultSet rs = null;
      Connection ct = null;
      try {
        ct = obtiene_conexion();
        stm = ct.createStatement();
        rs = stm.executeQuery(sql);
        //System.out.println("paso 1");
        while ( rs.next() ){
            Autoridad aut = new Autoridad();
            //System.out.println("paso ciclo paso A");
            aut.setId(rs.getInt("id_opc_aut"));
            aut.setSt_auto(rs.getString("desc_opc_aut"));
            aut.setSt_nom_auto( rs.getString("nom_opc_autoridad") );
            //System.out.println("paso ciclo paso B");
            lista.add(aut);
        }
      }
      catch(Exception e){
          JOptionPane.showMessageDialog(null, "Error Exception en ObtieneLista " + e.getMessage());
      }
      finally{
                try {   if (ct != null) ct.close(); if (stm != null) stm.close(); if (rs != null)   rs.close();  }
                catch(SQLException sq){
                    System.out.println("En Finally cerrando conexion en funcion obtiene_lista" + sq.getMessage() );
                    JOptionPane.showMessageDialog(null, "En Finally cerrando conexion, en funcion obtiene_lista " + sq.getMessage() );
                }
        }
      return lista;
    }
    public void llena_JTable(){
      ArrayList<Autoridad> tabla = obtiene_lista();
      DefaultTableModel model = (DefaultTableModel) jtabla.getModel();
      model.setRowCount(0);
      Object[] rows = new Object[3];
      for (int i=0; i<tabla.size(); i++){
        rows[0] = tabla.get(i).getId();
        rows[1] = tabla.get(i).getSt_auto();
        rows[2] = tabla.get(i).getSt_nom_auto();
        model.addRow(rows);
      }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtabla = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tf_id = new javax.swing.JTextField();
        tf_nombre = new javax.swing.JTextField();
        jbtn_actualizar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        tf_autoridad = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setFocusable(false);

        jtabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id", "Autoridad", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtabla.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jtabla.setPreferredSize(new java.awt.Dimension(550, 200));
        jtabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtabla);
        if (jtabla.getColumnModel().getColumnCount() > 0) {
            jtabla.getColumnModel().getColumn(0).setMaxWidth(50);
            jtabla.getColumnModel().getColumn(1).setMaxWidth(100);
            jtabla.getColumnModel().getColumn(2).setMaxWidth(350);
        }

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Modificacion Autoridades");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("Autoridad");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setText("Nombre");

        tf_id.setEditable(false);

        tf_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_nombreActionPerformed(evt);
            }
        });

        jbtn_actualizar.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jbtn_actualizar.setForeground(new java.awt.Color(0, 0, 255));
        jbtn_actualizar.setLabel("Actualizar");
        jbtn_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_actualizarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 255));
        jLabel4.setText("Id:");

        tf_autoridad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_autoridadActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 255));
        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tf_id, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(tf_autoridad)
                            .addComponent(tf_nombre))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbtn_actualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(144, 144, 144))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tf_id, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtn_actualizar)
                    .addComponent(jLabel2)
                    .addComponent(tf_autoridad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tf_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1))
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtablaMouseClicked
        int reg = jtabla.getSelectedRow();
        tf_id.setText( String.valueOf(obtiene_lista().get(reg).getId())  );
        tf_autoridad.setText( obtiene_lista().get(reg).getSt_auto());
        tf_nombre.setText( obtiene_lista().get(reg).getSt_nom_auto() );
        jbtn_actualizar.setEnabled(true);
    }//GEN-LAST:event_jtablaMouseClicked

    private void jbtn_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_actualizarActionPerformed
     
     Connection ct = null;   
     PreparedStatement pst = null;
     try
      { 
        String sql = "update opciones_autoridades" + " set desc_opc_aut = ?, " + "nom_opc_autoridad = ? " + " where id_opc_aut = ? ";
        ct = obtiene_conexion();
        pst = ct.prepareStatement(sql);
        String stid = tf_id.getText();
        String auto = tf_autoridad.getText();
        String nomb = tf_nombre.getText();
        
        pst.setString(1, auto);
        pst.setString(2, nomb);
        pst.setInt(3, Integer.parseInt(stid) );
        
        System.out.println("paso 4");
        
        System.out.println(sql);
        int res = pst.executeUpdate();
        if (res>0)
          System.out.println("Actualizacion realizada con exito");
        else 
          JOptionPane.showMessageDialog(null, "No se actualizaron registros para los parametros dados");  
        llena_JTable();
        limpiar();
        jbtn_actualizar.setEnabled(false);
      }
      catch(Exception e){
          JOptionPane.showMessageDialog(null, "Error Exception en Boton Actualizar " + e.getMessage());
      }
      finally{
                try {   if (ct != null) ct.close(); if (pst != null) pst.close(); }
                catch(SQLException sq){
                    System.out.println("En Finally en boton Actualizar" + sq.getMessage() );
                    JOptionPane.showMessageDialog(null, "En Finally en boton Actualizar" + sq.getMessage() );
                }
      }
        
    }//GEN-LAST:event_jbtn_actualizarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
      this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tf_autoridadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_autoridadActionPerformed
        tf_nombre.requestFocusInWindow();
    }//GEN-LAST:event_tf_autoridadActionPerformed

    private void tf_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_nombreActionPerformed
        tf_autoridad.requestFocusInWindow();
    }//GEN-LAST:event_tf_nombreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gui_Modifica_Autoridad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gui_Modifica_Autoridad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gui_Modifica_Autoridad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gui_Modifica_Autoridad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gui_Modifica_Autoridad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtn_actualizar;
    private javax.swing.JTable jtabla;
    private javax.swing.JTextField tf_autoridad;
    private javax.swing.JTextField tf_id;
    private javax.swing.JTextField tf_nombre;
    // End of variables declaration//GEN-END:variables
}
