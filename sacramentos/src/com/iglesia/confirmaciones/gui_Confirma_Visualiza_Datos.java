
package com.iglesia.confirmaciones;

import java.awt.Dimension;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;  
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import java.time.format.DateTimeFormatter;
import java.time.LocalDateTime;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ViewportLayout;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


public class gui_Confirma_Visualiza_Datos extends javax.swing.JFrame {

    /**
     * Creates new form JFrameConsulta
     */
    public gui_Confirma_Visualiza_Datos() {
        initComponents();
   
        setTitle("Datos de Repositorio de Confirmaciones");
        JTabla.setModel( new DefaultTableModel() );
        JTabla.setAlignmentX(TOP_ALIGNMENT);
        JTabla.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        //JTabla.setSize(2300, 700);
        this.setPreferredSize(new Dimension(2000, 64));
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        
        this.pack();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tConsulta = new javax.swing.JTextField();
        consulta = new javax.swing.JButton();
        consultaTodos = new javax.swing.JButton();
        LImpiar = new javax.swing.JButton();
        Salir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        JTabla = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 255));
        jLabel1.setText("BUSCAR POR");

        tConsulta.setName("tConsulta"); // NOI18N

        consulta.setText("Consulta por Parametro");
        consulta.setName("consulta"); // NOI18N
        consulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultaActionPerformed(evt);
            }
        });

        consultaTodos.setText("Consulta");
        consultaTodos.setName("consulta"); // NOI18N
        consultaTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultaTodosActionPerformed(evt);
            }
        });

        LImpiar.setText("Limpiar");
        LImpiar.setName("consulta"); // NOI18N
        LImpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LImpiarActionPerformed(evt);
            }
        });

        Salir.setText("Salir");
        Salir.setName("consulta"); // NOI18N
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });

        JTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10", "Title 11", "Title 12", "Title 13", "Title 14"
            }
        ));
        jScrollPane2.setViewportView(JTabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(consulta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(consultaTodos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LImpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Salir, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 740, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(consulta)
                    .addComponent(consultaTodos)
                    .addComponent(LImpiar)
                    .addComponent(Salir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1219, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    public void llena_JTable(int tipo_consulta){
      
        Connection cnt = null;  
        //PreparedStatement pst = null;
        Statement st = null;
        ResultSet rs = null;
        
        try {
        
        String condicion = tConsulta.getText();
        cnt = obtiene_conexion();
        String sql = "select nombre_confirmado, nombre_papa, nombre_mama, nombre_padrino, "
                + " nombre_madrina, lugar_nacimiento, fecha_nacimiento, lugar_bautizo, nombre_ministro, "
                + " fecha_confirmacion,  rp_libro, rp_pagina, rp_numero, novedades "
                + " from confirmaciones ";
        if (tipo_consulta == 0)
            sql += " where nombre_confirmado like '%" + condicion + "%'";
        st = cnt.createStatement();
        rs = st.executeQuery(sql);
        
        ResultSetMetaData rsmd = rs.getMetaData();
        DefaultTableModel model =  (DefaultTableModel) JTabla.getModel();
        int cols = rsmd.getColumnCount();
        String[] arr_columns = new String[cols];  
        for (int i =0; i<cols; i++)
          arr_columns[i] = rsmd.getColumnName(i+1);
        System.out.println(arr_columns[0]);
        arr_columns[0]="Nombre Confirmado"; arr_columns[1]="Nombre Papa"; arr_columns[2]="Nombre Mama";
        arr_columns[3]="Nombre Padrino "; arr_columns[4]="Nombre Madrina"; arr_columns[5]="Lugar Nacimiento";
        arr_columns[6]="Fecha Nacimiento"; arr_columns[7]="Lugar Bautizo"; arr_columns[8]="Nombre Ministro";
        arr_columns[9]="Fecha Confirmacion"; arr_columns[10]="RP Libro"; arr_columns[11]="RP Pagina";
        arr_columns[12]="RP Numero"; arr_columns[13]="Novedades"; 
        
        model.setColumnIdentifiers(arr_columns);
        
        // Poniendo ancho a las columnas
        //JTabla.getColumnModel().getColumn(0).setMaxWidth(250);
        JTabla.getColumnModel().getColumn(0).setPreferredWidth(200);
        JTabla.getColumnModel().getColumn(1).setPreferredWidth(120);
        JTabla.getColumnModel().getColumn(2).setPreferredWidth(120);
        JTabla.getColumnModel().getColumn(3).setPreferredWidth(120);
        JTabla.getColumnModel().getColumn(4).setPreferredWidth(120);
        JTabla.getColumnModel().getColumn(5).setPreferredWidth(150);
        JTabla.getColumnModel().getColumn(6).setPreferredWidth(150);
        JTabla.getColumnModel().getColumn(7).setPreferredWidth(100);
        JTabla.getColumnModel().getColumn(8).setPreferredWidth(150);
        JTabla.getColumnModel().getColumn(9).setPreferredWidth(150);
        JTabla.getColumnModel().getColumn(10).setPreferredWidth(100);
        JTabla.getColumnModel().getColumn(11).setPreferredWidth(100);
        JTabla.getColumnModel().getColumn(12).setPreferredWidth(100);
        JTabla.getColumnModel().getColumn(13).setPreferredWidth(300); // 2000
        
        //DefaultTableCellRenderer cellRenderer = new DefaultTableCellRenderer();
        //cellRenderer.setHorizontalAlignment(JLabel.CENTER);
        //JTabla.getColumnModel().getColumn(0).setCellRenderer(cellRenderer);
                
        DateFormat dateFormat = null;
        dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        
        String strDate = null;
        
        String campo1 = null; String campo2= null; String campo3 = null; String campo4 = null;
        String campo5 = null; String campo6= null; String campo7 = null; String campo8 = null;
        String campo9 = null; String campo10= null; String campo11 = null; String campo12 = null;
        String campo13 = null; String campo14 = null; 
      
        while (rs.next()) {
                // dateFormat.format(rs.getDate("fecha_nacimiento") );
                campo1 = rs.getString("nombre_confirmado");
                campo2 = rs.getString("nombre_papa");
                campo3 = rs.getString("nombre_mama");
                campo4 = rs.getString("nombre_padrino");
                campo5 = rs.getString("nombre_madrina");
                campo6 = rs.getString("lugar_nacimiento");
                campo7 = dateFormat.format(rs.getDate("fecha_nacimiento") );
                campo8 = rs.getString("lugar_bautizo");
                campo9 = rs.getString("nombre_ministro");
                campo10 = dateFormat.format(rs.getDate("fecha_confirmacion") );
                campo11 = rs.getString("rp_libro");
                campo12 = rs.getString("rp_pagina");
                campo13 = rs.getString("rp_numero");
                campo14 = rs.getString("novedades");
                
                String[] row = {campo1, campo2, campo3, campo4, campo5, campo6, campo7, campo8, campo9, campo10, campo11, campo12, campo13, campo14}; 
                model.addRow( row );
            }
        
        }
        
        catch(SQLException e) {
                System.out.println("error tipo SQLException " + e.getMessage() );
                JOptionPane.showMessageDialog(null, "Error SQLException" + e.getMessage());
       }
        catch(Exception e){
                System.out.println("error tipo Exception " + e.getMessage() );
                JOptionPane.showMessageDialog(null, "Error Exception" + e.getMessage());
        } 
        finally{
                try {   if (cnt != null)   cnt.close();
                        if (st != null)    st.close();
                        if (rs != null)    rs.close();}
                catch(SQLException sq){
                    System.out.println("En Finally cerrando conexion en funcion llena_JTable" + sq.getMessage() );
                    JOptionPane.showMessageDialog(null, "En Finally cerrando conexion, en funcion llena_JTable " + sq.getMessage() );
                }
        }
        
        setVisible(true);
        //setSize(1000, 600);
        
    }
    
    public Connection obtiene_conexion(){
        Connection con= null;
        try { // OJO: EN PRODUCCION CAMBIAR url y password
            String url = "jdbc:MySQL://localhost:3306/sacramentos";      
            String user = "root";
            String password = "";
            Class.forName("com.mysql.cj.jdbc.Driver");
            //System.out.println("error tipo A ");
            con = (Connection) DriverManager.getConnection(url,user,password);
            
        }            
        catch(SQLException e) {
                System.out.println("error SQLException " + e.getMessage() );
                JOptionPane.showMessageDialog(null, "Error SqlException en Obtiene Conexion " + e.getMessage());
            }
        catch(Exception e){
                System.out.println("error Exception " + e.getMessage() );
                JOptionPane.showMessageDialog(null, "Error Exception en Obtiene Conexion" + e.getMessage() );
            } 
        return con;
    }
    
    private void consultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultaActionPerformed
        //get_data();
        llena_JTable(0);
    }//GEN-LAST:event_consultaActionPerformed

    private void consultaTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultaTodosActionPerformed
        llena_JTable(1);
    }//GEN-LAST:event_consultaTodosActionPerformed

    private void LImpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LImpiarActionPerformed
        JTabla.setModel( new DefaultTableModel() );
        tConsulta.setText("");
    }//GEN-LAST:event_LImpiarActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_SalirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gui_Confirma_Visualiza_Datos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gui_Confirma_Visualiza_Datos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gui_Confirma_Visualiza_Datos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gui_Confirma_Visualiza_Datos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gui_Confirma_Visualiza_Datos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTabla;
    private javax.swing.JButton LImpiar;
    private javax.swing.JButton Salir;
    private javax.swing.JButton consulta;
    private javax.swing.JButton consultaTodos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField tConsulta;
    // End of variables declaration//GEN-END:variables
}
