
package com.iglesia.bautizos;

import java.awt.Dimension;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import java.time.format.DateTimeFormatter;
import java.time.LocalDateTime;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ViewportLayout;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


public class gui_Visualiza_Datos extends javax.swing.JFrame {

    /**
     * Creates new form JFrameConsulta
     */
    public gui_Visualiza_Datos() {
        initComponents();
    
        setTitle("Datos de Repositorio de Bautizos");
        JTabla.setModel( new DefaultTableModel() );
        JTabla.setEnabled(false);
        
        JTabla.setAlignmentX(TOP_ALIGNMENT);
        JTabla.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        //JTabla.setSize(2300, 700);
        this.setPreferredSize(new Dimension(2200, 700));
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        
        this.pack();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tConsulta = new javax.swing.JTextField();
        consulta = new javax.swing.JButton();
        LImpiar = new javax.swing.JButton();
        Salir = new javax.swing.JButton();
        Salir1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        JTabla = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 255));
        jLabel1.setText("BUSCAR POR");

        tConsulta.setName("tConsulta"); // NOI18N

        consulta.setText("Consulta por Parametro");
        consulta.setName("consulta"); // NOI18N
        consulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultaActionPerformed(evt);
            }
        });

        LImpiar.setText("Limpiar");
        LImpiar.setName("consulta"); // NOI18N
        LImpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LImpiarActionPerformed(evt);
            }
        });

        Salir.setText("Consulta");
        Salir.setName("consulta"); // NOI18N
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });

        Salir1.setText("Salir");
        Salir1.setName("consulta"); // NOI18N
        Salir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Salir1ActionPerformed(evt);
            }
        });

        JTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10", "Title 11", "Title 12", "Title 13", "Title 14", "Title 15", "Title 16", "Title 17", "Title 18", "Title 19"
            }
        ));
        jScrollPane2.setViewportView(JTabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(consulta)
                        .addGap(10, 10, 10)
                        .addComponent(Salir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(LImpiar)
                        .addGap(14, 14, 14)
                        .addComponent(Salir1)
                        .addGap(0, 79, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(consulta)
                        .addComponent(Salir))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Salir1)
                        .addComponent(LImpiar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(tConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(642, 642, 642))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void get_data(){
    
       String [] columnas = { "Nombre", "Fecha Bautizo", "Sacerdote", "Lugar Nacimiento", 
                  "Fecha Nacimiento", "Papa", "Mama", "Padrino", "Madrina", 
                  "RC Año", "Tomo", "Folio", "Acta", "Fecha", "# Inscripcion", 
                  "RP Libro", "Pagina", "Numero", "Novedades"} ; 
       
       DefaultTableModel modelo = new DefaultTableModel(null, columnas);
       JTabla.getColumnModel().getColumn(0).setMaxWidth(200);
       JTabla.setModel(modelo);
        
    }
    
    public void llena_JTable(int tipo_consulta){
      
        Connection cnt = null;  
        //PreparedStatement pst = null;
        Statement st = null;
        ResultSet rs = null;
        
        try {
        
        String condicion = tConsulta.getText();
        cnt = obtiene_conexion();
        String sql = "select nombre_bautizado, fecha_bautizo, nombre_sacerdote, lugar_nacimiento, "
                + " fecha_nacimiento, nombre_papa, nombre_mama, nombre_padrino, nombre_madrina, "
                + " rc_año, rc_tomo, rc_folio, rc_acta, rc_fecha, rc_num_inscripcion, "
                + " rp_libro, rp_pagina, rp_numero, novedades"
                + " from bautizos ";
        if (tipo_consulta == 0)
            sql += " where nombre_bautizado like '%" + condicion + "%'";
        st = cnt.createStatement();
        rs = st.executeQuery(sql);
        System.out.println("Paso 0");
        ResultSetMetaData rsmd = rs.getMetaData();
        DefaultTableModel model =  (DefaultTableModel) JTabla.getModel();
        int cols = rsmd.getColumnCount();
        String[] arr_columns = new String[cols];  
        for (int i =0; i<cols; i++)
          arr_columns[i] = rsmd.getColumnName(i+1);
        
        System.out.println("Paso 1");
        arr_columns[0]="Nombre"; arr_columns[1]="FechaBautizo"; arr_columns[2]="Sacerdote";
        arr_columns[3]="LugarNacimiento"; arr_columns[4]="FechaNacimiento"; arr_columns[5]="Papa";
        arr_columns[6]="Mama"; arr_columns[7]="Padrino"; arr_columns[8]="Madrina";
        arr_columns[9]="Año"; arr_columns[10]="Tomo"; arr_columns[11]="Folio";
        arr_columns[12]="Acta"; arr_columns[13]="Fecha"; arr_columns[14]="# Inscripcion";
        arr_columns[15]="Libro"; arr_columns[16]="Pagina"; arr_columns[17]="Numero"; 
        arr_columns[18]="Novedades";
        
        model.setColumnIdentifiers(arr_columns);
        
        //JOptionPane.showMessageDialog(null, "Mensaje Paso 0 ");
        // Poniendo ancho a las columnas
        
        JTabla.getColumnModel().getColumn(0).setPreferredWidth(260); // 220
        JTabla.getColumnModel().getColumn(1).setPreferredWidth(140);
        JTabla.getColumnModel().getColumn(2).setPreferredWidth(140); // 100
        JTabla.getColumnModel().getColumn(3).setPreferredWidth(120);
        JTabla.getColumnModel().getColumn(4).setPreferredWidth(160);
        JTabla.getColumnModel().getColumn(5).setPreferredWidth(240);
        JTabla.getColumnModel().getColumn(6).setPreferredWidth(240);
        JTabla.getColumnModel().getColumn(7).setPreferredWidth(240);
        JTabla.getColumnModel().getColumn(8).setPreferredWidth(240);
        JTabla.getColumnModel().getColumn(9).setPreferredWidth(50);
        JTabla.getColumnModel().getColumn(10).setPreferredWidth(120);
        JTabla.getColumnModel().getColumn(11).setPreferredWidth(120);
        JTabla.getColumnModel().getColumn(12).setPreferredWidth(80);
        JTabla.getColumnModel().getColumn(13).setPreferredWidth(120);
        JTabla.getColumnModel().getColumn(14).setPreferredWidth(120);
        JTabla.getColumnModel().getColumn(15).setPreferredWidth(120);
        JTabla.getColumnModel().getColumn(16).setPreferredWidth(120);
        JTabla.getColumnModel().getColumn(17).setPreferredWidth(120);
        JTabla.getColumnModel().getColumn(18).setPreferredWidth(600);
        
        
        //DefaultTableCellRenderer cellRenderer = new DefaultTableCellRenderer();
        //cellRenderer.setHorizontalAlignment(JLabel.CENTER);
        //JTabla.getColumnModel().getColumn(0).setCellRenderer(cellRenderer);
        
        
        DateFormat dateFormat = null;
        dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        
        String strDate = null;
        //String campo0 = null;
        String campo1 = null; String campo2= null; String campo3 = null; String campo4 = null;
        String campo5 = null; String campo6= null; String campo7 = null; String campo8 = null;
        String campo9 = null; String campo10= null; String campo11 = null; String campo12 = null;
        String campo13 = null; String campo14 = null; String campo15 = null; 
        String campo16 = null; String campo17 = null; String campo18 = null; 
        String campo19 = null;
/*                String sql = "select nombre_bautizado, fecha_bautizo, nombre_sacerdote, lugar_nacimiento, "
                + " fecha_nacimiento, nombre_papa, nombre_mama, nombre_padrino, nombre_madrina, "
                + " rc_año, rc_tomo, rc_folio, rc_acta, rc_fecha, rc_num_inscripcion"
                + " from bautizos";
  */    
        //JOptionPane.showMessageDialog(null, "Mensaje Paso 2 ");
        while (rs.next()) {
                
                campo1 = rs.getString("nombre_bautizado");
                if ( rs.getDate("fecha_bautizo") != null )
                  campo2 = dateFormat.format(rs.getDate("fecha_bautizo") );
                campo3 = rs.getString("nombre_sacerdote");
                campo4 = rs.getString("lugar_nacimiento");
                if ( rs.getDate("fecha_nacimiento") != null )
                   campo5 = dateFormat.format(rs.getDate("fecha_nacimiento") );
                campo6 = rs.getString("nombre_papa");
                campo7 = rs.getString("nombre_mama");
                campo8 = rs.getString("nombre_padrino");
                campo9 = rs.getString("nombre_madrina");
                campo10 = rs.getString("rc_año");
                campo11 = rs.getString("rc_tomo");
                campo12 = rs.getString("rc_folio");
                campo13 = rs.getString("rc_acta");
                
                // Artificio para campo fecha 
                if ( rs.getDate("rc_fecha") != null )  
                  campo14 = dateFormat.format(rs.getDate("rc_fecha") );
                
                //JOptionPane.showMessageDialog(null, "Mensaje Paso 3 ");
                campo15 = rs.getString("rc_num_inscripcion");
                campo16 = rs.getString("rp_libro");
                campo17 = rs.getString("rp_pagina");
                campo18 = rs.getString("rp_numero");
                campo19 = rs.getString("novedades");
                
                String[] row = {campo1, campo2, campo3, campo4, campo5, campo6, campo7, campo8, campo9, campo10, campo11, campo12, campo13, campo14, campo15, campo16, campo17, campo18, campo19}; 
                model.addRow( row );
                //JOptionPane.showMessageDialog(null, "Mensaje Paso 4 ");   
        }
        
        }
        
        catch(SQLException e) {
                System.out.println("error tipo SQLException " + e.getMessage() );
                JOptionPane.showMessageDialog(null, "Error SQLException" + e.getMessage());
       }
        catch(Exception e){
                System.out.println("error tipo Exception " + e.getMessage() );
                JOptionPane.showMessageDialog(null, "Error Exception " + e.getMessage());
        } 
        finally{
                try {   if (cnt != null)   cnt.close();
                        if (st != null)    st.close();
                        if (rs != null)    rs.close();}
                catch(SQLException sq){
                    System.out.println("En Finally cerrando conexion en funcion llena_JTable" + sq.getMessage() );
                    JOptionPane.showMessageDialog(null, "En Finally cerrando conexion, en funcion llena_JTable " + sq.getMessage() );
                }
        }
        
        setVisible(true);
        //setSize(1000, 600);
        
    }
    
    public Connection obtiene_conexion(){
        Connection con= null;
        try {
            String url = "jdbc:MySQL://localhost:3306/sacramentos";         //db is the name of the database
            String user = "root";
            String password = "";
            Class.forName("com.mysql.cj.jdbc.Driver");
            //System.out.println("error tipo A ");
            con = (Connection) DriverManager.getConnection(url,user,password);
            
        }            
        catch(SQLException e) {
                System.out.println("error SQLException " + e.getMessage() );
                JOptionPane.showMessageDialog(null, "Error SqlException en Obtiene Conexion " + e.getMessage());
            }
        catch(Exception e){
                System.out.println("error Exception " + e.getMessage() );
                JOptionPane.showMessageDialog(null, "Error Exception en Obtiene Conexion" + e.getMessage() );
            } 
        return con;
    }
    
    private void consultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultaActionPerformed
        //get_data();
        llena_JTable(0);
    }//GEN-LAST:event_consultaActionPerformed

    private void LImpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LImpiarActionPerformed
        tConsulta.setText("");
        JTabla.setModel( new DefaultTableModel() );
    }//GEN-LAST:event_LImpiarActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        llena_JTable(1);
    }//GEN-LAST:event_SalirActionPerformed

    private void Salir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Salir1ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_Salir1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gui_Visualiza_Datos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gui_Visualiza_Datos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gui_Visualiza_Datos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gui_Visualiza_Datos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gui_Visualiza_Datos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTabla;
    private javax.swing.JButton LImpiar;
    private javax.swing.JButton Salir;
    private javax.swing.JButton Salir1;
    private javax.swing.JButton consulta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField tConsulta;
    // End of variables declaration//GEN-END:variables
}
